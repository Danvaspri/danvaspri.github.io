{"version":3,"sources":["components/HomeComponent.js","components/ContactComponent.js","components/ProjectsComponent.js","components/ResumeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","firebase/firebase.js","firebase/config.js","components/MainComponent.js","redux/ActionCreators.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Home","className","Component","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","props","handleSubmit","bind","values","console","log","JSON","stringify","this","postContact","resetContactForm","model","onSubmit","Row","Col","md","text","id","name","placeholder","validators","show","messages","textarea","rows","Button","type","color","role","href","Projects","CardDeck","Card","src","width","height","CardBody","CardTitle","CardText","CardFooter","Resume","Header","state","isNavOpen","toggleNav","setState","Fragment","Navbar","light","expand","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","to","Footer","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","settings","timestampsInSnapshots","Main","TransitionGroup","CSSTransition","key","location","classNames","timeout","path","component","exact","withRouter","connect","dispatch","actions","reset","contact","collection","add","then","response","alert","catch","error","message","InitialContact","telnum","email","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.03fc4098.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Home extends Component{\r\n   render(){\r\n       return(\r\n        \r\n                <div className=\"container\">\r\n                    <div className=\" row-content\">\r\n                        <div className=\"row\">\r\n                     \r\n                            <div className=\" col-10 col-sm-5 m-auto about\">\r\n                            <h1> DANIEL VÁSQUEZ</h1>\r\n                            <p >Hi! im a passionate Web Developer from Colombia with hands on experience in the MERN stack. I´ve been coding student projects for my computer science degree, some \r\n                                personal projects\r\n                                and freelance projects,the most recent is an Ecommerce developed with wordpress and woocomerce \r\n                                for my grandpa's optical business. you can check out that and more in my projects section. \r\n                            </p>\r\n                            </div>\r\n                        </div>\r\n\r\n                        \r\n                    </div>     \r\n                </div>\r\n   \r\n\r\n\r\n      \r\n       )\r\n   } \r\n\r\n}\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {  Button, Label, Col, Row } from 'reactstrap';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\n export default class Contact extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postContact(values);\r\n        this.props.resetContactForm();\r\n    }\r\n   \r\n    render() {\r\n   \r\n    \r\n        return(\r\n        \r\n                <div className=\"container \">\r\n                    <div className=\"contactForm col-12 col-lg-9 m-auto\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-sm-6\"><h2 className=\"m-auto\" >CONTACT ME</h2>\r\n                                <div>\r\n                                    <p className=\"pt-4\">\r\n                                    I'm trying my best to learn and growth as much \r\n                                    as i can.\r\n                                   If you´re interested in my profile just leave me a brief message and i´ll answer as soon as i can.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12 col-sm-6  ml-auto\">\r\n                                <Form model=\"contact\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col md={6} >\r\n                                            <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                                    placeholder=\"\r\n                                                    Name\"\r\n                                                    className=\"form-control mb-3 \"\r\n                                                    validators={{\r\n                                                        required, minLength: minLength(3), maxLength: maxLength(30)\r\n                                                    }}\r\n                                                    />\r\n                                            <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".name\"\r\n                                                    show=\"touched\"\r\n                                                    messages={{\r\n                                                        required: 'Required. ',\r\n                                                        minLength: ' Must be greater than 2 characters ',\r\n                                                        maxLength: ' Must be 30 characters or less '\r\n                                                    }}\r\n                                                />\r\n                                        </Col>\r\n                                        <Col md={6}>\r\n                                            <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                                    placeholder=\"Phone Number\"\r\n                                                    className=\"form-control \"\r\n                                                    validators={{\r\n                                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                                    }}\r\n                                                    />\r\n                                            <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".telnum\"\r\n                                                    show=\"touched\"\r\n                                                    messages={{\r\n                                                        required: 'Required. ',\r\n                                                        minLength:  ' Must be greater than 2 numbers ',\r\n                                                        maxLength: ' Must be 15 numbers or less ',\r\n                                                        isNumber: ' Must be a number '\r\n                                                    }}\r\n                                                />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col >\r\n                                            <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                                    placeholder=\"Email\"\r\n                                                    className=\"form-control\"\r\n                                                    validators={{\r\n                                                        required, validEmail\r\n                                                    }}\r\n                                                    />\r\n                                            <Errors\r\n                                                    className=\"text-danger\"\r\n                                                    model=\".email\"\r\n                                                    show=\"touched\"\r\n                                                    messages={{\r\n                                                        required: ' Required. ',\r\n                                                        validEmail: ' Invalid Email Address '\r\n                                                    }}\r\n                                                />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row className=\"form-group\">\r\n                                        <Col >\r\n                                            <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                                placeholder=\"Message\"\r\n                                                    rows=\"12\"\r\n                                                    className=\"form-control\" />\r\n                                        </Col>\r\n                                        </Row>\r\n                                    <Row className=\"form-group \">\r\n                                        <div className=\"ml-auto\">\r\n                                            <Col >\r\n                                                <Button  type=\"submit\" color=\"light\">\r\n                                                    Send Message\r\n                                                    </Button>\r\n                                            </Col>\r\n                                        </div>\r\n                                    </Row>\r\n                                </Form>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"btn-group m-auto\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-dark\" href=\"https://github.com/Danvaspri\"><i className=\"fa fa-github\"></i> GitHub</a>\r\n                       \r\n                        <a role=\"button\" className=\"btn btn-dark\" href=\"https://www.linkedin.com/in/daniel-andr%C3%A9s-v%C3%A1squez-prieto-517527182?lipi=urn%3Ali%3Apage%3Ad_flagship3_profile_view_base_contact_details%3B5O4EGToyTCqv70mSuvOx0g%3D%3D\"><i className=\"fa fa-linkedin\"></i> LinkedIn</a>\r\n                    \r\n                  \r\n                    </div>\r\n                        </div>\r\n                  \r\n                                    \r\n\r\n                        </div>\r\n                </div>\r\n           \r\n     );\r\n    }    \r\n}\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport {CardDeck, CardImg, CardBody, CardTitle,CardText,CardFooter,Card, Button, Nav, NavItem} from 'reactstrap';\r\n\r\nclass Projects extends Component {\r\n\r\n    render(){\r\n    return(\r\n \r\n    <div className=\"container\">\r\n        <div className=\"row row-content\">\r\n            <div className=\"row\">\r\n                <div >\r\n                    <CardDeck>\r\n                        <Card>\r\n                            <  iframe src=\"https://optimaxco.netlify.app/\" width=\"100%\" height=\"400px\"/>\r\n                            <CardBody>\r\n                            <CardTitle>OPTIMAX</CardTitle>\r\n                            <CardText>\r\n                                Ecommerce developed with react and redux \r\n                            </CardText>\r\n                           </CardBody>\r\n                           <CardFooter>\r\n                          \r\n                          <Button className=\"col-12 pink\" href=\"http://www.optimaxco.com/\" >Page</Button>\r\n                        \r\n                           </CardFooter>\r\n                         \r\n                        </Card>\r\n                        <Card>\r\n                            < iframe src=\"https://epic-ride-24c783.netlify.app/\"  width=\"100%\" height=\"400px\" />\r\n                            <CardBody>\r\n                            <CardTitle>SANKE</CardTitle>\r\n                            <CardText>\r\n                                A little funny snake game but misnamed on purpose. \r\n                            </CardText>\r\n                      \r\n                            </CardBody>\r\n                            <CardFooter>\r\n                            <Button className=\"col-12 mb-2 pink\" href=\"https://github.com/Danvaspri/sankeevo\">Code</Button>\r\n                            <Button className=\"col-12 pink\" href=\"https://epic-ride-24c783.netlify.app/\">Page</Button>\r\n                            </CardFooter>\r\n                        </Card>\r\n                        <Card>\r\n                            <  iframe src=\"https://blissful-carson-1c7022.netlify.app/\" width=\"100%\" height=\"400px\"/>\r\n                            <CardBody>\r\n                            <CardTitle>ConFusion</CardTitle>\r\n                            <CardText>\r\n                                Ristorant template site developed with react and redux using firebase as BaaS \r\n                            </CardText>\r\n                           \r\n                          \r\n                            </CardBody>\r\n                            <CardFooter>  \r\n                                <Button className=\"col-12 mb-2 pink\" href=\"https://github.com/Danvaspri/messing-around-with-react\">Code</Button>\r\n                            <Button className=\"col-12 pink\" href=\"https://blissful-carson-1c7022.netlify.app/\">Page</Button>\r\n                        </CardFooter>\r\n                        \r\n                        </Card>\r\n                        \r\n                     \r\n                    </CardDeck>\r\n               \r\n                </div>\r\n            </div>\r\n        </div>     \r\n    </div>\r\n    \r\n    \r\n    )\r\n}\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n\r\n    render(){\r\n    return(\r\n   \r\n    <div className=\"container\">\r\n      \r\n               \r\n                <embed src=\"https://firebasestorage.googleapis.com/v0/b/portfolioserver-b5101.appspot.com/o/RESUME%202.0.pdf?alt=media&token=ce6e9c08-89a3-46eb-9b2c-efff919f6ed8\" width=\"100%\" height=\"600px\"/>\r\n               \r\n              \r\n    </div>\r\n\r\n    \r\n    \r\n    )\r\n}\r\n}\r\n\r\nexport default Resume;","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n        \r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n  \r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n  \r\n \r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n            \r\n            <div>\r\n                <Navbar light expand=\"sm\"  >    \r\n                \r\n                     <NavbarToggler  className=\"mr-3\" onClick={this.toggleNav} />\r\n                           <Collapse  isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar  className=\"m-auto p-4\"> \r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/home'> HOME</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/projects'> PROJECTS</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/resume'> RESUME</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contact'> CONTACT</NavLink>\r\n                            </NavItem>\r\n               \r\n                            </Nav>\r\n                           \r\n                          \r\n                        </Collapse>\r\n                     \r\n                       \r\n                    \r\n                </Navbar>\r\n          \r\n            </div>\r\n        \r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component {\r\n\r\n    render(){\r\n    return(\r\n    <div className=\"footer \">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto pt-3 \">\r\n                    <p>© Copyright 2020 Daniel Vásquez</p>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n}\r\n\r\nexport default Footer;","import { config } from './config';\r\nimport firebase from 'firebase';\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nconst settings = {timestampsInSnapshots: true};\r\nfirebase.firestore().settings(settings);\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const firebasestore = firebase.firestore;","export const config = {\r\n  apiKey: \"AIzaSyDyKFqvErFPiZs4d_sd2ZfpEX6AXLcIteU\",\r\n  authDomain: \"portfolioserver-b5101.firebaseapp.com\",\r\n  databaseURL: \"https://portfolioserver-b5101.firebaseio.com\",\r\n  projectId: \"portfolioserver-b5101\",\r\n  storageBucket: \"portfolioserver-b5101.appspot.com\",\r\n  messagingSenderId: \"907642350784\",\r\n  appId: \"1:907642350784:web:4546a59afb6e7ed43a5125\",\r\n  measurementId: \"G-GYY3R2VVT2\"\r\n};\r\n","\r\nimport React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport Projects from './ProjectsComponent';\r\nimport Resume from './ResumeComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {  postContact } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n \r\n    \r\n    }\r\n  }\r\nconst mapDispatchToProps = dispatch => ({\r\n resetContactForm: () => { dispatch(actions.reset('contact'))},\r\n postContact: (contact) => dispatch(postContact(contact))\r\n\r\n});\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n \r\n  \r\n  render() {\r\n\r\n\r\n\r\n\r\n    \r\n    return (\r\n\r\n      <body>\r\n        <div>\r\n        <Header \r\n          />   \r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={() =><Home/>} />\r\n              <Route  exact path='/projects' component={() =><Projects/>}/>\r\n              <Route  exact path='/resume' component={() =><Resume/>}/>\r\n              <Route  exact path=\"/contact\" component={() => <Contact resetContactForm={this.props.resetContactForm} postContact={this.props.postContact} />} />\r\n             \r\n            <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n        </div>\r\n      </body>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\nimport { firestore} from '../firebase/firebase';\r\n\r\nexport const postContact = (contact) => (dispatch) => {\r\n        \r\n    return firestore.collection('contact').add(contact)\r\n    .then(response => { console.log('Contact', response); alert('Thank you for your contacting me!'); })\r\n    .catch(error =>  { console.log('Contact', error.message); alert('Your message could not be sended\\nError: '+error.message); });\r\n};","export const InitialContact = {\r\n    name: '',\r\n    telnum: '',\r\n    email: '',\r\n    message: ''\r\n};","\nimport React, { Component } from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\nexport default class App extends Component {\n\n\n  render() {\n    return (\n  \n      <Provider store={store}>\n           <BrowserRouter>\n      <div className=\"App\">\n        <Main/>\n      </div>\n    </BrowserRouter>\n      </Provider>\n       \n    );\n  };\n}","  \r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialContact } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n        \r\n            ...createForms({\r\n                contact: InitialContact\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}